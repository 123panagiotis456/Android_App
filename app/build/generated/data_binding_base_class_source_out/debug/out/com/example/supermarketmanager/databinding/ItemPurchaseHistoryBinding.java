// Generated by view binder compiler. Do not edit!
package com.example.supermarketmanager.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.supermarketmanager.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemPurchaseHistoryBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final Button btnReaddToCart;

  @NonNull
  public final TextView tvProductsDetails;

  @NonNull
  public final TextView tvPurchaseDate;

  @NonNull
  public final TextView tvTotalCost;

  private ItemPurchaseHistoryBinding(@NonNull CardView rootView, @NonNull Button btnReaddToCart,
      @NonNull TextView tvProductsDetails, @NonNull TextView tvPurchaseDate,
      @NonNull TextView tvTotalCost) {
    this.rootView = rootView;
    this.btnReaddToCart = btnReaddToCart;
    this.tvProductsDetails = tvProductsDetails;
    this.tvPurchaseDate = tvPurchaseDate;
    this.tvTotalCost = tvTotalCost;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemPurchaseHistoryBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemPurchaseHistoryBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_purchase_history, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemPurchaseHistoryBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnReaddToCart;
      Button btnReaddToCart = ViewBindings.findChildViewById(rootView, id);
      if (btnReaddToCart == null) {
        break missingId;
      }

      id = R.id.tvProductsDetails;
      TextView tvProductsDetails = ViewBindings.findChildViewById(rootView, id);
      if (tvProductsDetails == null) {
        break missingId;
      }

      id = R.id.tvPurchaseDate;
      TextView tvPurchaseDate = ViewBindings.findChildViewById(rootView, id);
      if (tvPurchaseDate == null) {
        break missingId;
      }

      id = R.id.tvTotalCost;
      TextView tvTotalCost = ViewBindings.findChildViewById(rootView, id);
      if (tvTotalCost == null) {
        break missingId;
      }

      return new ItemPurchaseHistoryBinding((CardView) rootView, btnReaddToCart, tvProductsDetails,
          tvPurchaseDate, tvTotalCost);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
