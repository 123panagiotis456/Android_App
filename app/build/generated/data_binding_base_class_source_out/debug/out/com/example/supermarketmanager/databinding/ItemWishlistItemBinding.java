// Generated by view binder compiler. Do not edit!
package com.example.supermarketmanager.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.supermarketmanager.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemWishlistItemBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final ConstraintLayout btnproduct;

  @NonNull
  public final ImageView ivProductImage;

  @NonNull
  public final FrameLayout topFrame;

  @NonNull
  public final TextView tvProductDescription;

  @NonNull
  public final TextView tvProductName;

  @NonNull
  public final TextView tvProductOffer;

  @NonNull
  public final TextView tvProductPrice;

  private ItemWishlistItemBinding(@NonNull CardView rootView, @NonNull ConstraintLayout btnproduct,
      @NonNull ImageView ivProductImage, @NonNull FrameLayout topFrame,
      @NonNull TextView tvProductDescription, @NonNull TextView tvProductName,
      @NonNull TextView tvProductOffer, @NonNull TextView tvProductPrice) {
    this.rootView = rootView;
    this.btnproduct = btnproduct;
    this.ivProductImage = ivProductImage;
    this.topFrame = topFrame;
    this.tvProductDescription = tvProductDescription;
    this.tvProductName = tvProductName;
    this.tvProductOffer = tvProductOffer;
    this.tvProductPrice = tvProductPrice;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemWishlistItemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemWishlistItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_wishlist_item, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemWishlistItemBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnproduct;
      ConstraintLayout btnproduct = ViewBindings.findChildViewById(rootView, id);
      if (btnproduct == null) {
        break missingId;
      }

      id = R.id.ivProductImage;
      ImageView ivProductImage = ViewBindings.findChildViewById(rootView, id);
      if (ivProductImage == null) {
        break missingId;
      }

      id = R.id.topFrame;
      FrameLayout topFrame = ViewBindings.findChildViewById(rootView, id);
      if (topFrame == null) {
        break missingId;
      }

      id = R.id.tvProductDescription;
      TextView tvProductDescription = ViewBindings.findChildViewById(rootView, id);
      if (tvProductDescription == null) {
        break missingId;
      }

      id = R.id.tvProductName;
      TextView tvProductName = ViewBindings.findChildViewById(rootView, id);
      if (tvProductName == null) {
        break missingId;
      }

      id = R.id.tvProductOffer;
      TextView tvProductOffer = ViewBindings.findChildViewById(rootView, id);
      if (tvProductOffer == null) {
        break missingId;
      }

      id = R.id.tvProductPrice;
      TextView tvProductPrice = ViewBindings.findChildViewById(rootView, id);
      if (tvProductPrice == null) {
        break missingId;
      }

      return new ItemWishlistItemBinding((CardView) rootView, btnproduct, ivProductImage, topFrame,
          tvProductDescription, tvProductName, tvProductOffer, tvProductPrice);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
