// Generated by view binder compiler. Do not edit!
package com.example.supermarketmanager.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import android.widget.ImageView;
import android.widget.RadioButton;
import android.widget.RadioGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.supermarketmanager.R;
import com.google.android.material.button.MaterialButton;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class BottomSheetSortBinding implements ViewBinding {
  @NonNull
  private final FrameLayout rootView;

  @NonNull
  public final MaterialButton btnApply;

  @NonNull
  public final ImageView btnClose;

  @NonNull
  public final RadioButton rbDefault;

  @NonNull
  public final RadioButton rbPrice;

  @NonNull
  public final RadioGroup rgSort;

  @NonNull
  public final TextView tvSortTitle;

  private BottomSheetSortBinding(@NonNull FrameLayout rootView, @NonNull MaterialButton btnApply,
      @NonNull ImageView btnClose, @NonNull RadioButton rbDefault, @NonNull RadioButton rbPrice,
      @NonNull RadioGroup rgSort, @NonNull TextView tvSortTitle) {
    this.rootView = rootView;
    this.btnApply = btnApply;
    this.btnClose = btnClose;
    this.rbDefault = rbDefault;
    this.rbPrice = rbPrice;
    this.rgSort = rgSort;
    this.tvSortTitle = tvSortTitle;
  }

  @Override
  @NonNull
  public FrameLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static BottomSheetSortBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static BottomSheetSortBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.bottom_sheet_sort, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static BottomSheetSortBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnApply;
      MaterialButton btnApply = ViewBindings.findChildViewById(rootView, id);
      if (btnApply == null) {
        break missingId;
      }

      id = R.id.btnClose;
      ImageView btnClose = ViewBindings.findChildViewById(rootView, id);
      if (btnClose == null) {
        break missingId;
      }

      id = R.id.rbDefault;
      RadioButton rbDefault = ViewBindings.findChildViewById(rootView, id);
      if (rbDefault == null) {
        break missingId;
      }

      id = R.id.rbPrice;
      RadioButton rbPrice = ViewBindings.findChildViewById(rootView, id);
      if (rbPrice == null) {
        break missingId;
      }

      id = R.id.rgSort;
      RadioGroup rgSort = ViewBindings.findChildViewById(rootView, id);
      if (rgSort == null) {
        break missingId;
      }

      id = R.id.tvSortTitle;
      TextView tvSortTitle = ViewBindings.findChildViewById(rootView, id);
      if (tvSortTitle == null) {
        break missingId;
      }

      return new BottomSheetSortBinding((FrameLayout) rootView, btnApply, btnClose, rbDefault,
          rbPrice, rgSort, tvSortTitle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
